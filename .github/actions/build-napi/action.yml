name: 'build-napi-artifact'
description: |
  Builds napi artifact using specified settings'

inputs:
  docker:
    required: true
  target:
    required: true
  build:
    required: true
  node-version:
    default: 18
  rust-version:
    default: 1.70.0

runs:
  using: "composite"
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      if: ${{ !inputs.docker }}
      with:
        node-version: ${{ inputs.node-version }}
        cache: npm
        cache-dependency-path: ${{ github.workspace }}/aries/wrappers/vcx-napi-rs/package-lock.json
    - name: Install
      uses: actions-rs/toolchain@v1
      if: ${{ !inputs.docker }}
      with:
        toolchain: ${{ inputs.rust-version }}
        target: ${{ inputs.target }}
        default: true
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          .cargo-cache
          target/
        key: ${{ inputs.target }}-cargo-registry
    - name: Install dependencies
      run: npm install
      working-directory: ${{ github.workspace }}/aries/wrappers/vcx-napi-rs
      shell: bash
    - name: Build in docker
      uses: addnab/docker-run-action@v3
      if: ${{ inputs.docker }}
      with:
        image: ${{ inputs.docker }}
        options: -v /home/runner/.cargo/git/db:/root/.cargo/git/db -v /home/runner/.cargo/registry/cache:/root/.cargo/registry/cache -v /home/runner/.cargo/registry/index:/root/.cargo/registry/index -v ${{ github.workspace }}:/build -w /build
        run: ${{ inputs.build }}
    - name: Build
      run: ${{ inputs.build }}
      if: ${{ !inputs.docker }}
      working-directory: ${{ github.workspace }}/aries/wrappers/vcx-napi-rs
      shell: bash
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: bindings-${{ inputs.target }}
        path: ${{ github.workspace }}/aries/wrappers/vcx-napi-rs/*.node
        if-no-files-found: error
