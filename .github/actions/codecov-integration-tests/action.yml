name: 'Generate integration test code coverage'

inputs:
  codecov-img-name: 
    description: 'Name of the codecov image'
    required: true
  pool-img-name: 
    description: 'Name of the pool image'
    required: true
  agency-img-name: 
    description: 'Name of the agency image'
    required: true
  cov-file-path: 
    description: 'Path to the coverage file'
    default: libvcx/coverage.lcov

env:
  DOCKER_BUILDKIT: 1

runs:
  using: 'composite'
  steps:
    - name: Run integration tests and generate coverage
      run: |
        set -x
        sudo rm -rf "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY" "/usr/local/lib/android" "/usr/share/dotnet"
        docker run --rm -d --name indypool --network host ${{ inputs.pool-img-name }}
        docker run --rm -d --name postgres --network host -e POSTGRES_PASSWORD=mysecretpassword postgres:12.1
        docker run --rm -d --name vcxagency --network host --env-file ci/agency/localhost.env ${{ inputs.agency-img-name }}
        docker run --name libvcx-codecov-integration --network host \
          -e RUST_TEST_THREADS=1 \
          -e TEST_POOL_IP=127.0.0.1 \
          -e CARGO_INCREMENTAL=0 \
          -e RUSTFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests' \
          -e RUSTDOCFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests' \
          ${{ inputs.codecov-img-name }} \
          bash -c '(cd $HOME/aries-vcx/aries_vcx && \
              cargo test --features "pool_tests agency_pool_tests agency_v2" && \
              grcov ../target/debug/ -s . -t lcov --llvm --branch --ignore-not-existing -o ../target/debug/coverage.lcov)'
        docker_id=$(docker ps -a | grep libvcx-codecov-integration | grep Exited | tail -n 1 | cut -d ' ' -f 1)
        docker_image_id=$(docker images | grep codecov | perl -pe 's/\s+/ /g' | cut -d ' ' -f 3)
        docker cp ${docker_id}:/home/indy/aries-vcx/target/debug/coverage.lcov ${{ inputs.cov-file-path }}
        docker rm ${docker_id} > /dev/null
        docker rmi ${docker_image_id} > /dev/null
      shell: bash
