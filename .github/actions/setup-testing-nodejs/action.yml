name: "setup-testing-nodejs"
description: 'Install library deps, build libvcx'

inputs:
  rust-toolchain-version:
    description: 'The Rust toolchain version to use'
    required: true
  skip-docker-setup:
    description: 'If true, skip spinning up docker containers'
    required: false
    default: false
  node-version:
    description: 'Version of nodejs'
    required: true

runs:
  using: "composite"
  steps:
    - name: "Use Node.js ${{ inputs.node-version }}"
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
    - name: "Install npm 8.19.3"
      shell: bash
      run: |
        npm install -g npm@8.19.3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ inputs.rust-toolchain-version }}
    - uses: Swatinem/rust-cache@v2
    - name: "Install dependencies"
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libsodium-dev libssl-dev libzmq3-dev
    - name: "Start indypool, mysql, agency"
      if: ${{ inputs.skip-docker-setup != 'true' }}
      shell: bash
      run: |
        docker run --rm -d --name mysql     --network host -e MYSQL_ROOT_PASSWORD=mysecretpassword mysql:5.7.35
        docker run --rm -d --name indypool  --network host ${{ env.DOCKER_IMAGE_POOL }}
        sleep 5
        docker-compose -f ./.github/ci/agency/docker-compose.yml up -d
    - name: "Build binding module"
      shell: bash
      run: (cd aries/wrappers/vcx-napi-rs && npm install && npm run build:napi:debug)
    - name: "Transpile TS wrapper"
      shell: bash
      run: (cd aries/wrappers/node && npm install && npm run compile)
    - name: "Check wrappers"
      shell: bash
      run: |
        ls -lah aries/wrappers/vcx-napi-rs
        ls -lah aries/wrappers/node
