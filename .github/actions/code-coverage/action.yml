name: "code-coverage"
description: "Generate test code coverage"

inputs:
  codecov-img-name:
    description: 'Name of the codecov image'
    required: true
  test-features:
    description: 'Blank-separated list of features to use for the test run'
    required: true
  test-path:
    description: 'Path to the folder to run tests from'
    required: true
  cov-file-path:
    description: 'Path to the coverage file'
    default: libvcx/coverage.lcov

runs:
  using: 'composite'
  steps:
    - name: Run integration tests and generate coverage
      run: |
        set -x
        mkdir -p /tmp/artifacts/coverage
        sudo rm -rf "/usr/local/share/boost" "/usr/local/lib/android" "/usr/share/dotnet"
        docker run --name calc-codecov --network host \
          -e RUST_TEST_THREADS=1 \
          -e TEST_POOL_IP=127.0.0.1 \
          -e CARGO_INCREMENTAL=0 \
          -e RUSTFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests' \
          -e RUSTDOCFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests' \
          -e TEST_PATH='${{ inputs.test-path }}' \
          -e FEATURES='${{ inputs.test-features }}' \
          ${{ inputs.codecov-img-name }} \
          bash -c 'set -ex; \
                   cd $HOME/aries-vcx; \
                   env; \
                   cargo test \
                         --package ${{ inputs.test-path }} \
                         --features "$FEATURES"; \
                   grcov ./target/debug/ -s . -t lcov --llvm --branch --ignore-not-existing -o ./target/debug/coverage.lcov'
        docker cp calc-codecov:/home/indy/aries-vcx/target/debug/coverage.lcov ${{ inputs.cov-file-path }}
        docker rm calc-codecov > /dev/null
      shell: bash
