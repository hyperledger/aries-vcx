name: 'Generate test code coverage'

inputs:
  run-services: 
    description: 'Boolean flag indicating whether it is necessary to run services alongside the tests'
    required: true
  codecov-img-name: 
    description: 'Name of the codecov image'
    required: true
  codecov-cont-name: 
    description: 'Name of the codecov container'
    required: true
  pool-img-name: 
    description: 'Name of the pool image'
    required: false
  agency-img-name: 
    description: 'Name of the agency image'
    required: false
  test-features: 
    description: 'Blank-separated list of features to use for the test run'
    required: true
  test-path: 
    description: 'Path to the folder to run tests from'
    required: true
  cov-file-path: 
    description: 'Path to the coverage file'
    default: libvcx/coverage.lcov

env:
  DOCKER_BUILDKIT: 1

runs:
  using: 'composite'
  steps:
    - name: Run integration tests and generate coverage
      run: |
        set -x
        sudo rm -rf "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY" "/usr/local/lib/android" "/usr/share/dotnet"
        if [[ ${{ inputs.run-services }} == true ]]; then
          docker run --rm -d --name indypool  --network host $DOCKER_IMG_NAME_POOL
          if [[ -n "${{ inputs.agency-img-name }}" ]]; then
            docker run --rm -d --name mysql --network host -e MYSQL_ROOT_PASSWORD=mysecretpassword mysql:5.7.35
            sleep 7
            DOCKER_IMG_NAME_AGENCY=${{ inputs.agency-img-name }} docker-compose -f ./ci/agency/docker-compose.yml up -d
            sleep 10
            docker-compose -f ./ci/agency/docker-compose.yml logs
          fi
        fi
        docker run --name ${{ inputs.codecov-cont-name }} --network host \
          -e RUST_TEST_THREADS=1 \
          -e TEST_POOL_IP=127.0.0.1 \
          -e CARGO_INCREMENTAL=0 \
          -e RUSTFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests' \
          -e RUSTDOCFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests' \
          -e TEST_PATH=${{ inputs.test-path }} \
          -e FEATURES='${{ inputs.test-features }}' \
          ${{ inputs.codecov-img-name }} \
          bash -c '(cd $HOME/$TEST_PATH && \
              cargo test --features "$FEATURES" && \
              grcov ../target/debug/ -s . -t lcov --llvm --branch --ignore-not-existing -o ../target/debug/coverage.lcov)'
        docker_id=$(docker ps -a | grep ${{ inputs.codecov-cont-name }} | grep Exited | tail -n 1 | cut -d ' ' -f 1)
        docker_image_id=$(docker images | grep codecov | perl -pe 's/\s+/ /g' | cut -d ' ' -f 3)
        docker cp ${docker_id}:/home/indy/aries-vcx/target/debug/coverage.lcov ${{ inputs.cov-file-path }}
        docker rm ${docker_id} > /dev/null
        docker rmi ${docker_image_id} > /dev/null
      shell: bash
