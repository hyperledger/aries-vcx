use crate::api_lib::utils::libvcx_error;
use crate::api_lib::utils::libvcx_error::{LibvcxError, LibvcxErrorKind};

impl From<LibvcxError> for u32 {
    fn from(error: LibvcxError) -> u32 {
        error.kind().into()
    }
}

impl From<LibvcxErrorKind> for u32 {
    fn from(code: LibvcxErrorKind) -> u32 {
        match code {
            LibvcxErrorKind::InvalidState => libvcx_error::INVALID_STATE.code_num,
            LibvcxErrorKind::InvalidConfiguration => libvcx_error::INVALID_CONFIGURATION.code_num,
            LibvcxErrorKind::InvalidHandle => libvcx_error::INVALID_OBJ_HANDLE.code_num,
            LibvcxErrorKind::InvalidJson => libvcx_error::INVALID_JSON.code_num,
            LibvcxErrorKind::InvalidOption => libvcx_error::INVALID_OPTION.code_num,
            LibvcxErrorKind::InvalidMessagePack => libvcx_error::INVALID_MSGPACK.code_num,
            LibvcxErrorKind::ObjectCacheError => libvcx_error::OBJECT_CACHE_ERROR.code_num,
            LibvcxErrorKind::NoPaymentInformation => libvcx_error::NO_PAYMENT_INFORMATION.code_num,
            LibvcxErrorKind::NotReady => libvcx_error::NOT_READY.code_num,
            LibvcxErrorKind::InvalidRevocationDetails => libvcx_error::INVALID_REVOCATION_DETAILS.code_num,
            LibvcxErrorKind::GeneralConnectionError => libvcx_error::CONNECTION_ERROR.code_num,
            LibvcxErrorKind::IOError => libvcx_error::IOERROR.code_num,
            LibvcxErrorKind::LibindyInvalidStructure => libvcx_error::LIBINDY_INVALID_STRUCTURE.code_num,
            LibvcxErrorKind::TimeoutLibindy => libvcx_error::TIMEOUT_LIBINDY_ERROR.code_num,
            LibvcxErrorKind::InvalidLibindyParam => libvcx_error::INVALID_LIBINDY_PARAM.code_num,
            LibvcxErrorKind::AlreadyInitialized => libvcx_error::ALREADY_INITIALIZED.code_num,
            LibvcxErrorKind::CreateConnection => libvcx_error::CREATE_CONNECTION_ERROR.code_num,
            LibvcxErrorKind::InvalidConnectionHandle => libvcx_error::INVALID_CONNECTION_HANDLE.code_num,
            LibvcxErrorKind::InvalidInviteDetail => libvcx_error::INVALID_INVITE_DETAILS.code_num,
            LibvcxErrorKind::InvalidRedirectDetail => libvcx_error::INVALID_REDIRECT_DETAILS.code_num,
            LibvcxErrorKind::DeleteConnection => libvcx_error::CANNOT_DELETE_CONNECTION.code_num,
            LibvcxErrorKind::CreateCredDef => libvcx_error::CREATE_CREDENTIAL_DEF_ERR.code_num,
            LibvcxErrorKind::CredDefAlreadyCreated => libvcx_error::CREDENTIAL_DEF_ALREADY_CREATED.code_num,
            LibvcxErrorKind::InvalidCredDefHandle => libvcx_error::INVALID_CREDENTIAL_DEF_HANDLE.code_num,
            LibvcxErrorKind::InvalidRevocationEntry => libvcx_error::INVALID_REV_ENTRY.code_num,
            LibvcxErrorKind::CreateRevRegDef => libvcx_error::INVALID_REV_REG_DEF_CREATION.code_num,
            LibvcxErrorKind::InvalidCredentialHandle => libvcx_error::INVALID_CREDENTIAL_HANDLE.code_num,
            LibvcxErrorKind::CreateCredentialRequest => libvcx_error::CREATE_CREDENTIAL_REQUEST_ERROR.code_num,
            LibvcxErrorKind::InvalidIssuerCredentialHandle => libvcx_error::INVALID_ISSUER_CREDENTIAL_HANDLE.code_num,
            LibvcxErrorKind::InvalidCredentialRequest => libvcx_error::INVALID_CREDENTIAL_REQUEST.code_num,
            LibvcxErrorKind::InvalidCredential => libvcx_error::INVALID_CREDENTIAL_JSON.code_num,
            LibvcxErrorKind::InsufficientTokenAmount => libvcx_error::INSUFFICIENT_TOKEN_AMOUNT.code_num,
            LibvcxErrorKind::InvalidProofHandle => libvcx_error::INVALID_PROOF_HANDLE.code_num,
            LibvcxErrorKind::InvalidDisclosedProofHandle => libvcx_error::INVALID_DISCLOSED_PROOF_HANDLE.code_num,
            LibvcxErrorKind::InvalidProof => libvcx_error::INVALID_PROOF.code_num,
            LibvcxErrorKind::InvalidSchema => libvcx_error::INVALID_SCHEMA.code_num,
            LibvcxErrorKind::InvalidProofCredentialData => libvcx_error::INVALID_PROOF_CREDENTIAL_DATA.code_num,
            LibvcxErrorKind::CreateProof => libvcx_error::CREATE_PROOF_ERROR.code_num,
            LibvcxErrorKind::InvalidRevocationTimestamp => libvcx_error::INVALID_REVOCATION_TIMESTAMP.code_num,
            LibvcxErrorKind::CreateSchema => libvcx_error::INVALID_SCHEMA_CREATION.code_num,
            LibvcxErrorKind::InvalidSchemaHandle => libvcx_error::INVALID_SCHEMA_HANDLE.code_num,
            LibvcxErrorKind::InvalidSchemaSeqNo => libvcx_error::INVALID_SCHEMA_SEQ_NO.code_num,
            LibvcxErrorKind::DuplicationSchema => libvcx_error::DUPLICATE_SCHEMA.code_num,
            LibvcxErrorKind::UnknownSchemaRejection => libvcx_error::UNKNOWN_SCHEMA_REJECTION.code_num,
            LibvcxErrorKind::WalletCreate => libvcx_error::INVALID_WALLET_CREATION.code_num,
            LibvcxErrorKind::MissingWalletName => libvcx_error::MISSING_WALLET_NAME.code_num,
            LibvcxErrorKind::WalletAccessFailed => libvcx_error::WALLET_ACCESS_FAILED.code_num,
            LibvcxErrorKind::InvalidWalletHandle => libvcx_error::INVALID_WALLET_HANDLE.code_num,
            LibvcxErrorKind::DuplicationWallet => libvcx_error::WALLET_ALREADY_EXISTS.code_num,
            LibvcxErrorKind::WalletNotFound => libvcx_error::WALLET_NOT_FOUND.code_num,
            LibvcxErrorKind::WalletRecordNotFound => libvcx_error::WALLET_RECORD_NOT_FOUND.code_num,
            LibvcxErrorKind::PoolLedgerConnect => libvcx_error::POOL_LEDGER_CONNECT.code_num,
            LibvcxErrorKind::InvalidGenesisTxnPath => libvcx_error::INVALID_GENESIS_TXN_PATH.code_num,
            LibvcxErrorKind::CreatePoolConfig => libvcx_error::CREATE_POOL_CONFIG.code_num,
            LibvcxErrorKind::DuplicationWalletRecord => libvcx_error::DUPLICATE_WALLET_RECORD.code_num,
            LibvcxErrorKind::WalletAlreadyOpen => libvcx_error::WALLET_ALREADY_OPEN.code_num,
            LibvcxErrorKind::DuplicationMasterSecret => libvcx_error::DUPLICATE_MASTER_SECRET.code_num,
            LibvcxErrorKind::DuplicationDid => libvcx_error::DID_ALREADY_EXISTS_IN_WALLET.code_num,
            LibvcxErrorKind::InvalidLedgerResponse => libvcx_error::INVALID_LEDGER_RESPONSE.code_num,
            LibvcxErrorKind::InvalidAttributesStructure => libvcx_error::INVALID_ATTRIBUTES_STRUCTURE.code_num,
            LibvcxErrorKind::InvalidPaymentAddress => libvcx_error::INVALID_PAYMENT_ADDRESS.code_num,
            LibvcxErrorKind::NoEndpoint => libvcx_error::NO_ENDPOINT.code_num,
            LibvcxErrorKind::InvalidProofRequest => libvcx_error::INVALID_PROOF_REQUEST.code_num,
            LibvcxErrorKind::NoPoolOpen => libvcx_error::NO_POOL_OPEN.code_num,
            LibvcxErrorKind::PostMessageFailed => libvcx_error::POST_MSG_FAILURE.code_num,
            LibvcxErrorKind::LoggingError => libvcx_error::LOGGING_ERROR.code_num,
            LibvcxErrorKind::EncodeError => libvcx_error::BIG_NUMBER_ERROR.code_num,
            LibvcxErrorKind::UnknownError => libvcx_error::UNKNOWN_ERROR.code_num,
            LibvcxErrorKind::InvalidDid => libvcx_error::INVALID_DID.code_num,
            LibvcxErrorKind::InvalidVerkey => libvcx_error::INVALID_VERKEY.code_num,
            LibvcxErrorKind::InvalidNonce => libvcx_error::INVALID_NONCE.code_num,
            LibvcxErrorKind::InvalidUrl => libvcx_error::INVALID_URL.code_num,
            LibvcxErrorKind::MissingWalletKey => libvcx_error::MISSING_WALLET_KEY.code_num,
            LibvcxErrorKind::MissingPaymentMethod => libvcx_error::MISSING_PAYMENT_METHOD.code_num,
            LibvcxErrorKind::SerializationError => libvcx_error::SERIALIZATION_ERROR.code_num,
            LibvcxErrorKind::NotBase58 => libvcx_error::NOT_BASE58.code_num,
            LibvcxErrorKind::InvalidHttpResponse => libvcx_error::INVALID_HTTP_RESPONSE.code_num,
            LibvcxErrorKind::InvalidMessages => libvcx_error::INVALID_MESSAGES.code_num,
            LibvcxErrorKind::MissingExportedWalletPath => libvcx_error::MISSING_EXPORTED_WALLET_PATH.code_num,
            LibvcxErrorKind::MissingBackupKey => libvcx_error::MISSING_BACKUP_KEY.code_num,
            LibvcxErrorKind::UnknownLibndyError => libvcx_error::UNKNOWN_LIBINDY_ERROR.code_num,
            LibvcxErrorKind::ActionNotSupported => libvcx_error::ACTION_NOT_SUPPORTED.code_num,
            LibvcxErrorKind::Common(num) => num,
            LibvcxErrorKind::LibndyError(num) => num,
            LibvcxErrorKind::NoAgentInformation => libvcx_error::NO_AGENT_INFO.code_num,
            LibvcxErrorKind::RevRegDefNotFound => libvcx_error::REV_REG_DEF_NOT_FOUND.code_num,
            LibvcxErrorKind::RevDeltaNotFound => libvcx_error::REV_DELTA_NOT_FOUND.code_num,
            LibvcxErrorKind::RevDeltaFailedToClear => libvcx_error::REV_DELTA_FAILED_TO_CLEAR.code_num,
            LibvcxErrorKind::PoisonedLock => libvcx_error::POISONED_LOCK.code_num,
            LibvcxErrorKind::InvalidMessageFormat => libvcx_error::INVALID_MESSAGE_FORMAT.code_num,
            LibvcxErrorKind::CreatePublicAgent => libvcx_error::CREATE_PUBLIC_AGENT.code_num,
            LibvcxErrorKind::CreateOutOfBand => libvcx_error::CREATE_OUT_OF_BAND.code_num,
            LibvcxErrorKind::CreateAgent => libvcx_error::CREATE_AGENT.code_num,
            LibvcxErrorKind::InvalidInput => libvcx_error::INVALID_INPUT.code_num,
            LibvcxErrorKind::ParsingError => libvcx_error::PARSING.code_num,
            LibvcxErrorKind::UnimplementedFeature => libvcx_error::UNIMPLEMENTED_FEATURE.code_num,
        }
    }
}

